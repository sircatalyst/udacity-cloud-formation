AWSTemplateFormatVersion: 2010-09-09

Description: |
  Project 2
  Deploy a high-availability web app with cloudformation

Parameters:
  EnvironmentName:
    Type: String
    Description: Infrastructure name
    Default: Udagram

  VpcBlock:
    Type: String
    Description: VPC CIDR IP
    Default: 10.0.0.0/16

  PrivateSubnet1:
    Type: String
    Description: Private Subnet for the first AZ
    Default: 10.0.0.0/24

  PrivateSubnet2:
    Type: String
    Description: Private Subnet for the second AZ
    Default: 10.0.1.0/24

  PublicSubnet1:
    Type: String
    Description: Public Subnet for the first AZ
    Default: 10.0.2.0/24

  PublicSubnet2:
    Type: String
    Description: Public Subnet for the second AZ
    Default: 10.0.3.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcBlock
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-InternetGateway

  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  FirstPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-FirstPrivateSubnet

  SecondPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-SecondPrivateSubnet

  FirstPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-FirstPublicSubnet

  SecondPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-SecondPublicSubnet

  FirstElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-FirstElasticIP

  SecondElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-SecondElasticIP

  FirstNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref FirstPublicSubnet
      AllocationId: !GetAtt FirstElasticIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-FirstNatGateway

  SecondNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref SecondPublicSubnet
      AllocationId: !GetAtt SecondElasticIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-SecondNatGateway

  FirstPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-FirstPrivateRouteTable
  
  FirstPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref FirstNatGateway
      RouteTableId: !Ref FirstPrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  FirstPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FirstPrivateSubnet
      RouteTableId: !Ref FirstPrivateRouteTable
      
  SecondPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-SecondPrivateRouteTable

  SecondPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref SecondNatGateway
      RouteTableId: !Ref SecondPrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCInternetGatewayAttachment
    Properties:
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0


  FirstPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FirstPublicSubnet
      RouteTableId: !Ref PublicRouteTable

  SecondPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SecondPublicSubnet
      RouteTableId: !Ref PublicRouteTable


Outputs:
  VPC:
    Description: The created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPC
  
  FirstPrivateRouteTable:
    Description: Created first private route table
    Value: !Ref FirstPrivateRouteTable
    Export:
      Name: !Sub ${EnvironmentName}-FirstPrivateRouteTable

  SecondPrivateRouteTable:
    Description: Created second private route table
    Value: !Ref SecondPrivateRouteTable
    Export:
      Name: !Sub ${EnvironmentName}-SecondPrivateRouteTable

  PublicRouteTable:
    Description: Created public route table
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${EnvironmentName}-PublicRouteTable
  
  FirstPrivateSubnet:
    Description: Created first private subnet
    Value: !Ref FirstPrivateSubnet
    Export:
      Name: !Sub ${EnvironmentName}-FirstPrivateSubnet

  SecondPrivateSubnet:
    Description: Created second private subnet
    Value: !Ref SecondPrivateSubnet
    Export:
      Name: !Sub ${EnvironmentName}-SecondPrivateSubnet

  FirstPublicSubnet:
    Description: Created first public subnet
    Value: !Ref FirstPublicSubnet
    Export:
      Name: !Sub ${EnvironmentName}-FirstPublicSubnet

  SecondPublicSubnet:
    Description: Created second public subnet
    Value: !Ref SecondPublicSubnet
    Export:
      Name: !Sub ${EnvironmentName}-SecondPublicSubnet

  PrivateSubnets:
    Description: List private subnets
    Value: !Join [",", [ !Ref FirstPrivateSubnet, !Ref SecondPrivateSubnet]]
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSubnets

  PublicSubnets:
    Description: List public subnets
    Value: !Join [",", [ !Ref FirstPublicSubnet, !Ref SecondPublicSubnet]]
    Export:
      Name: !Sub ${EnvironmentName}-PublicSubnets


